#N canvas 209 40 698 1053 10;
#X obj 46 954 outlet;
#X obj 46 42 inlet;
#X obj 201 42 inlet;
#X obj 363 42 inlet;
#N canvas 0 22 577 494 \$0-args 0;
#X obj 49 49 inlet;
#X obj 49 382 outlet;
#X obj 219 382 outlet;
#X msg 49 75 \$1 \$1;
#X obj 219 354 r \$0-noarg;
#X obj 49 354 r \$0-thisarg;
#N canvas 0 22 254 277 \$0-test-1 0;
#X obj 41 46 inlet;
#X obj 113 102 makefilename $%d-;
#X obj 41 75 t b f;
#X obj 41 102 symbol \$1-;
#X obj 41 130 sel s;
#X obj 68 153 b;
#X obj 68 176 list append \$1;
#X obj 41 222 s \$0-noarg;
#X obj 68 200 s \$0-thisarg;
#X connect 0 0 2 0;
#X connect 1 0 4 1;
#X connect 2 0 3 0;
#X connect 2 1 1 0;
#X connect 3 0 4 0;
#X connect 4 0 7 0;
#X connect 4 1 5 0;
#X connect 5 0 6 0;
#X connect 6 0 8 0;
#X restore 49 326 pd \$0-test-1;
#N canvas 0 22 254 277 \$0-test-2 0;
#X obj 41 46 inlet;
#X obj 113 102 makefilename $%d-;
#X obj 41 75 t b f;
#X obj 41 130 sel s;
#X obj 68 153 b;
#X obj 41 222 s \$0-noarg;
#X obj 68 200 s \$0-thisarg;
#X obj 41 102 symbol \$2-;
#X obj 68 176 list append \$2;
#X connect 0 0 2 0;
#X connect 1 0 3 1;
#X connect 2 0 7 0;
#X connect 2 1 1 0;
#X connect 3 0 5 0;
#X connect 3 1 4 0;
#X connect 4 0 8 0;
#X connect 7 0 3 0;
#X connect 8 0 6 0;
#X restore 64 304 pd \$0-test-2;
#N canvas 0 22 254 277 \$0-test-3 0;
#X obj 41 46 inlet;
#X obj 113 102 makefilename $%d-;
#X obj 41 75 t b f;
#X obj 41 130 sel s;
#X obj 68 153 b;
#X obj 41 222 s \$0-noarg;
#X obj 68 200 s \$0-thisarg;
#X obj 41 102 symbol \$3-;
#X obj 68 176 list append \$3;
#X connect 0 0 2 0;
#X connect 1 0 3 1;
#X connect 2 0 7 0;
#X connect 2 1 1 0;
#X connect 3 0 5 0;
#X connect 3 1 4 0;
#X connect 4 0 8 0;
#X connect 7 0 3 0;
#X connect 8 0 6 0;
#X restore 79 283 pd \$0-test-3;
#N canvas 0 22 254 277 \$0-test-4 0;
#X obj 41 46 inlet;
#X obj 113 102 makefilename $%d-;
#X obj 41 75 t b f;
#X obj 41 130 sel s;
#X obj 68 153 b;
#X obj 41 222 s \$0-noarg;
#X obj 68 200 s \$0-thisarg;
#X obj 41 102 symbol \$4-;
#X obj 68 176 list append \$4;
#X connect 0 0 2 0;
#X connect 1 0 3 1;
#X connect 2 0 7 0;
#X connect 2 1 1 0;
#X connect 3 0 5 0;
#X connect 3 1 4 0;
#X connect 4 0 8 0;
#X connect 7 0 3 0;
#X connect 8 0 6 0;
#X restore 94 261 pd \$0-test-4;
#N canvas 0 22 254 277 \$0-test-5 0;
#X obj 41 46 inlet;
#X obj 113 102 makefilename $%d-;
#X obj 41 75 t b f;
#X obj 41 130 sel s;
#X obj 68 153 b;
#X obj 41 222 s \$0-noarg;
#X obj 68 200 s \$0-thisarg;
#X obj 41 102 symbol \$5-;
#X obj 68 176 list append \$5;
#X connect 0 0 2 0;
#X connect 1 0 3 1;
#X connect 2 0 7 0;
#X connect 2 1 1 0;
#X connect 3 0 5 0;
#X connect 3 1 4 0;
#X connect 4 0 8 0;
#X connect 7 0 3 0;
#X connect 8 0 6 0;
#X restore 110 239 pd \$0-test-5;
#N canvas 0 22 254 277 \$0-test-6 0;
#X obj 41 46 inlet;
#X obj 113 102 makefilename $%d-;
#X obj 41 75 t b f;
#X obj 41 130 sel s;
#X obj 68 153 b;
#X obj 41 222 s \$0-noarg;
#X obj 68 200 s \$0-thisarg;
#X obj 41 102 symbol \$6-;
#X obj 68 176 list append \$6;
#X connect 0 0 2 0;
#X connect 1 0 3 1;
#X connect 2 0 7 0;
#X connect 2 1 1 0;
#X connect 3 0 5 0;
#X connect 3 1 4 0;
#X connect 4 0 8 0;
#X connect 7 0 3 0;
#X connect 8 0 6 0;
#X restore 125 217 pd \$0-test-6;
#N canvas 0 22 254 277 \$0-test-7 0;
#X obj 41 46 inlet;
#X obj 113 102 makefilename $%d-;
#X obj 41 75 t b f;
#X obj 41 130 sel s;
#X obj 68 153 b;
#X obj 41 222 s \$0-noarg;
#X obj 68 200 s \$0-thisarg;
#X obj 41 102 symbol \$7-;
#X obj 68 176 list append \$7;
#X connect 0 0 2 0;
#X connect 1 0 3 1;
#X connect 2 0 7 0;
#X connect 2 1 1 0;
#X connect 3 0 5 0;
#X connect 3 1 4 0;
#X connect 4 0 8 0;
#X connect 7 0 3 0;
#X connect 8 0 6 0;
#X restore 140 195 pd \$0-test-7;
#N canvas 0 22 254 277 \$0-test-8 0;
#X obj 41 46 inlet;
#X obj 113 102 makefilename $%d-;
#X obj 41 75 t b f;
#X obj 41 130 sel s;
#X obj 68 153 b;
#X obj 41 222 s \$0-noarg;
#X obj 68 200 s \$0-thisarg;
#X obj 41 102 symbol \$8-;
#X obj 68 176 list append \$8;
#X connect 0 0 2 0;
#X connect 1 0 3 1;
#X connect 2 0 7 0;
#X connect 2 1 1 0;
#X connect 3 0 5 0;
#X connect 3 1 4 0;
#X connect 4 0 8 0;
#X connect 7 0 3 0;
#X connect 8 0 6 0;
#X restore 156 173 pd \$0-test-8;
#X obj 49 101 route 1 2 3 4 5 6 7 8 9 10;
#N canvas 0 22 254 277 \$0-test-9 0;
#X obj 41 46 inlet;
#X obj 113 102 makefilename $%d-;
#X obj 41 75 t b f;
#X obj 41 130 sel s;
#X obj 68 153 b;
#X obj 41 222 s \$0-noarg;
#X obj 68 200 s \$0-thisarg;
#X obj 41 102 symbol \$9-;
#X obj 68 176 list append \$9;
#X connect 0 0 2 0;
#X connect 1 0 3 1;
#X connect 2 0 7 0;
#X connect 2 1 1 0;
#X connect 3 0 5 0;
#X connect 3 1 4 0;
#X connect 4 0 8 0;
#X connect 7 0 3 0;
#X connect 8 0 6 0;
#X restore 171 151 pd \$0-test-9;
#N canvas 0 22 254 277 \$0-test-10 0;
#X obj 41 46 inlet;
#X obj 113 102 makefilename $%d-;
#X obj 41 75 t b f;
#X obj 41 130 sel s;
#X obj 68 153 b;
#X obj 41 222 s \$0-noarg;
#X obj 68 200 s \$0-thisarg;
#X obj 41 102 symbol \$10-;
#X obj 68 176 list append \$10;
#X connect 0 0 2 0;
#X connect 1 0 3 1;
#X connect 2 0 7 0;
#X connect 2 1 1 0;
#X connect 3 0 5 0;
#X connect 3 1 4 0;
#X connect 4 0 8 0;
#X connect 7 0 3 0;
#X connect 8 0 6 0;
#X restore 186 129 pd \$0-test-10;
#X text 46 27 argument number;
#X text 42 419 argument if it exists;
#X text 216 419 bang if it doesn't;
#X text 194 35 This subpatch tests for the presence of up to 10 creation
arguments. After IOhannes ZmÃ¶lnig.;
#X connect 0 0 3 0;
#X connect 3 0 14 0;
#X connect 4 0 2 0;
#X connect 5 0 1 0;
#X connect 14 0 6 0;
#X connect 14 1 7 0;
#X connect 14 2 8 0;
#X connect 14 3 9 0;
#X connect 14 4 10 0;
#X connect 14 5 11 0;
#X connect 14 6 12 0;
#X connect 14 7 13 0;
#X connect 14 8 15 0;
#X connect 14 9 16 0;
#X restore 392 161 pd \$0-args;
#X obj 392 109 loadbang;
#X msg 392 134 1;
#X obj 363 265 route symbol;
#X obj 393 321 s \$0-array-name;
#X text 85 980 2015 Matt Barber;
#X obj 251 42 inlet;
#X obj 159 259 moses 0;
#X obj 198 321 s \$0-direction;
#X obj 46 321 swap;
#X obj 209 551 f;
#X obj 161 516 until;
#X obj 67 357 s \$0-onset;
#X obj 253 706 r \$0-array-name;
#X msg 159 284 0;
#X msg 198 284 1;
#X obj 277 179 route bang;
#X obj 301 42 inlet;
#X obj 363 199 t a;
#X obj 46 284 array-rangenorm;
#X obj 46 115 list split 4;
#X obj 46 256 array-range;
#X obj 259 551 + 1;
#X obj 228 941 tabinsert;
#X obj 209 737 tabread;
#X msg 393 292 set \$1;
#X obj 89 766 r \$0-array-name;
#X obj 46 198 pack 0 -1 0 1;
#X obj 46 223 unpack 0 -1 0 1;
#N canvas 891 332 705 803 \$0-first 1;
#X obj 73 47 inlet;
#X obj 494 202 r \$0-direction;
#X obj 312 283 r \$0-onset;
#X obj 312 310 tabread;
#X obj 251 257 r \$0-array-name;
#X obj 197 310 tabread;
#X obj 140 129 until;
#X obj 140 179 f;
#X obj 197 179 + 1;
#X obj 155 153 r \$0-onset;
#X obj 167 103 r \$0-!=;
#X obj 73 264 f;
#X obj 197 416 !=;
#X obj 197 443 sel 1;
#X obj 197 469 s \$0-!=;
#X obj 73 103 t b f;
#X obj 73 73 - 1;
#X obj 73 528 outlet;
#X obj 197 528 outlet;
#X obj 456 403 tabswap2;
#X obj 501 356 r \$0-onset;
#X obj 73 404 -;
#X obj 88 378 r \$0-onset;
#X obj 197 336 t f f;
#X obj 426 168 f;
#X obj 426 109 r \$0-!=;
#X obj 456 303 f;
#X obj 456 249 sel 1;
#X obj 73 464 t f f;
#X obj 385 83 r \$0-array-name;
#X obj 212 389 r \$0-o;
#X obj 471 169 r \$0-o;
#X obj 312 336 s \$0-o;
#X obj 224 364 s \$0-!=-val;
#X obj 441 136 r \$0-!=-val;
#X obj 471 276 r \$0-!=-val;
#X obj 197 207 t f f;
#X obj 224 232 s \$0-!=-ind;
#X obj 478 330 r \$0-!=-ind;
#X obj 88 232 r \$0-!=-ind;
#X obj 456 202 >;
#X obj 456 228 !=;
#X text 86 559 Total p so far.;
#X text 303 477 [array-search] checks the sorted range to see if it
is sorted ascending or descending before it performs its search. However
\, since insertion sort always starts with a "sorted list" of one element
\, the binary search can't tell whether it's intended to be ascending
or descending. In the parent patch \, ascending is given a value of
1 \, and descending a value of 0 \; \; This routine iterates over the
first elements of the range until it finds an element that is not equal
to the first. Then \, whether that element is greater than the first
element ([> ] outputs a 1 if so \, 0 otherwise) \, that can be compared
with the requested direction from the parent patch. If the values don't
match \, then this element is swapped with the first. Then the binary
search can tell what's what. \; \; Meanwhile \, we've kept tabs on
how far into the range we've had to iterate \, and send that out to
the parent so that the main binary insertion sort routine can commence.
, f 61;
#X obj 73 294 + 1;
#X text 98 294 <- start parent on next index., f 15;
#X connect 0 0 16 0;
#X connect 1 0 41 1;
#X connect 2 0 3 0;
#X connect 3 0 32 0;
#X connect 4 0 5 0;
#X connect 4 0 3 0;
#X connect 5 0 23 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 7 1;
#X connect 8 0 36 0;
#X connect 9 0 7 1;
#X connect 10 0 6 1;
#X connect 11 0 44 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 15 0 11 0;
#X connect 15 1 6 0;
#X connect 16 0 15 0;
#X connect 20 0 19 2;
#X connect 21 0 28 0;
#X connect 22 0 21 1;
#X connect 23 0 12 0;
#X connect 23 1 33 0;
#X connect 24 0 40 0;
#X connect 25 0 24 0;
#X connect 26 0 19 0;
#X connect 27 0 26 0;
#X connect 28 0 17 0;
#X connect 28 1 18 0;
#X connect 29 0 19 0;
#X connect 30 0 12 1;
#X connect 31 0 40 1;
#X connect 34 0 24 1;
#X connect 35 0 26 1;
#X connect 36 0 5 0;
#X connect 36 1 37 0;
#X connect 38 0 19 1;
#X connect 39 0 11 1;
#X connect 40 0 41 0;
#X connect 41 0 27 0;
#X connect 44 0 21 0;
#X restore 161 419 pd \$0-first;
#X obj 46 389 t b f f, f 39;
#X obj 161 452 * -1;
#X obj 161 483 +;
#X text 54 493 init p minus -> total p so far, f 16;
#X obj 209 637 +;
#X obj 284 606 r \$0-onset;
#X obj 253 797 array-search;
#X obj 342 737 r \$0-array-name;
#X obj 270 737 r \$0-onset;
#X obj 209 579 t f f;
#X obj 226 606 s \$0-p;
#X obj 287 766 r \$0-p;
#X obj 209 766 t f f;
#X obj 342 766 list split 1;
#X obj 322 943 print;
#X obj 209 663 t f f;
#X obj 273 680 s \$0-ind;
#X obj 343 833 r \$0-ind;
#X obj 328 873 swap;
#X obj 329 897 -;
#X obj 357 912 + 1;
#X connect 1 0 24 0;
#X connect 2 0 31 1;
#X connect 3 0 22 0;
#X connect 4 0 22 0;
#X connect 5 0 6 0;
#X connect 6 0 4 0;
#X connect 7 0 29 0;
#X connect 10 0 31 2;
#X connect 11 0 18 0;
#X connect 11 1 19 0;
#X connect 13 0 34 0;
#X connect 13 1 16 0;
#X connect 14 0 26 0;
#X connect 14 0 43 0;
#X connect 15 0 14 0;
#X connect 17 0 28 0;
#X connect 18 0 12 0;
#X connect 19 0 12 0;
#X connect 20 1 22 0;
#X connect 21 0 31 3;
#X connect 22 0 7 0;
#X connect 22 0 25 3;
#X connect 23 0 13 0;
#X connect 23 1 13 1;
#X connect 24 0 31 0;
#X connect 24 1 20 0;
#X connect 24 2 31 0;
#X connect 25 0 23 0;
#X connect 25 1 23 1;
#X connect 25 2 23 2;
#X connect 26 0 14 1;
#X connect 28 0 46 0;
#X connect 29 0 8 0;
#X connect 30 0 27 0;
#X connect 31 0 32 0;
#X connect 32 0 25 0;
#X connect 32 1 25 1;
#X connect 32 2 25 2;
#X connect 32 3 11 0;
#X connect 33 0 35 0;
#X connect 33 1 14 1;
#X connect 34 0 0 0;
#X connect 34 1 33 0;
#X connect 34 2 36 1;
#X connect 35 0 36 0;
#X connect 36 0 15 0;
#X connect 38 0 49 0;
#X connect 39 0 38 1;
#X connect 40 0 27 1;
#X connect 40 0 52 0;
#X connect 40 1 27 1;
#X connect 40 1 52 0;
#X connect 41 0 47 0;
#X connect 42 0 40 1;
#X connect 43 0 38 0;
#X connect 43 1 44 0;
#X connect 45 0 40 2;
#X connect 46 0 27 0;
#X connect 46 1 40 0;
#X connect 47 1 40 4;
#X connect 49 0 28 0;
#X connect 49 1 50 0;
#X connect 51 0 52 1;
#X connect 52 0 53 0;
#X connect 52 1 53 1;
#X connect 53 0 54 0;
#X connect 54 0 27 2;
